{"version":3,"sources":["webpack:////home/martin/devilbox/data/www/hogenbejn/custom/plugins/PromotionProduct/src/Resources/app/administration/src/product-promotions/index.ts","webpack:////home/martin/devilbox/data/www/hogenbejn/custom/plugins/PromotionProduct/src/Resources/app/administration/src/product-promotions/template.html.twig"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_createForOfIteratorHelper","o","allowArrayLike","it","Array","isArray","_unsupportedIterableToArray","F","s","n","e","_e2","f","normalCompletion","didErr","step","_e3","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","_toConsumableArray","arr","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","_nonIterableSpread","_slicedToArray","_arrayWithHoles","_i","_s","_e","_x","_r","_arr","_n","_d","_iterableToArrayLimit","_nonIterableRest","minLen","toString","test","len","arr2","template","props","product","required","inject","computed","promotionProductRepository","this","repositoryFactory","promotionRepository","propertyOptions","promotionProduct","entries","Shopware","EntityDefinition","get","properties","sort","map","_ref","_ref2","id","promotionProductTranslation","promotionValues","promotionDiscountValues","promotionDiscountCodes","concat","xOptions","data","downloads","parentProduct","created","State","mounted","_this","_callee","criteria","promotions","_iterator","_step","_loop","savedPromotions","_iterator2","_step2","promotion","_context2","Data","Criteria","addAssociation","addFilter","multi","item","equals","mediaId","search","download","discount","_context","find","productId","media","promotionId","Utils","createId","useCodes","useIndividualCodes","promotionCodeApiService","generateCodeFixed","code","active","maxRedemptionsPerCustomer","price","gross","scope","considerAdvancedRules","discounts","add","t1","saveAll","attributes","getFile","t2","methods","addAttribute","_this2","_callee2","_context3","x","y","updateAttributes","$forceUpdate","_this3","_callee3","_context4","save","$refs","src","content","_this4","_callee4","headers","blob","_context5","Accept","contentType","Authorization","Service","getToken","fetch","URL","createObjectURL"],"mappings":"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","file":"static/js/0.js","sourcesContent":["import productPromotionTemplate from \"./template.html.twig\";\r\nimport {\r\n    Property\r\n} from \"../../../../../../../../../vendor/shopware/administration/Resources/app/administration/src/core/data/entity-definition.data\";\r\n\r\nexport default {\r\n    template: productPromotionTemplate,\r\n    props: {\r\n        product: {\r\n            //@ts-ignore\r\n            type: Object as EntitySchema.Entity<'product'>,\r\n            required: true,\r\n        }\r\n    },\r\n    inject: [\r\n        'promotionCodeApiService',\r\n        'repositoryFactory'\r\n    ],\r\n    computed: {\r\n        promotionProductRepository(): TypedRepository<'product_promotion'> {\r\n            return this.repositoryFactory.create('product_promotion')\r\n        },\r\n        promotionRepository(): TypedRepository<'promotion'> {\r\n            return this.repositoryFactory.create('promotion')\r\n        },\r\n        propertyOptions() {\r\n            const promotionProduct = [];\r\n            Object.entries(Shopware.EntityDefinition.get('product').properties).sort().map(([key, property]: [string, Property]) => {\r\n                promotionProduct.push({\r\n                    id: 'product.' + key,\r\n                    name: 'product.' + key\r\n                })\r\n            })\r\n\r\n            const promotionProductTranslation = Object.keys(Shopware.EntityDefinition.get('product_translation').properties).sort().map(key => ({\r\n                id: 'product.translated.' + key,\r\n                name: 'product.translated.' + key\r\n            }))\r\n\r\n            const promotionValues = Object.keys(Shopware.EntityDefinition.get('promotion').properties).sort().map(key => ({\r\n                id: 'promotion.' + key,\r\n                name: key\r\n            }))\r\n            const promotionDiscountValues = Object.keys(Shopware.EntityDefinition.get('promotion_discount').properties).sort().map(key => ({\r\n                id: 'promotion.discounts.' + key,\r\n                name: 'discounts.' + key\r\n            }))\r\n            const promotionDiscountCodes = Object.keys(Shopware.EntityDefinition.get('promotion_individual_code').properties).sort().map(key => ({\r\n                id: 'promotion.individualCodes.' + key,\r\n                name: 'individualCodes.' + key\r\n            }))\r\n            return [...promotionProduct, ...promotionProductTranslation, ...promotionValues, ...promotionDiscountValues, ...promotionDiscountCodes]\r\n        },\r\n        xOptions() {\r\n            return [\r\n                {\r\n                    id: 'left',\r\n                    name: 'Linksbündig'\r\n                },\r\n                {\r\n                    id: 'center',\r\n                    name: 'Zentriert'\r\n                },\r\n                {\r\n                    id: 'right',\r\n                    name: 'Rechtsbündig'\r\n                }\r\n            ]\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            downloads: [] as EntitySchema.EntityCollection<'media'>,\r\n            parentProduct: {} as EntitySchema.Entity<'product'>\r\n        }\r\n    },\r\n    created() {\r\n        this.parentProduct = Shopware.State.get('swProductDetail').parentProduct\r\n    },\r\n    async mounted() {\r\n        const criteria = new Shopware.Data.Criteria()\r\n        criteria.addAssociation('promotion')\r\n        criteria.addAssociation('promotion.salesChannels')\r\n        criteria.addAssociation('promotion.discounts')\r\n        criteria.addAssociation('promotion.individualCodes')\r\n        criteria.addAssociation('media')\r\n        criteria.addAssociation('product')\r\n        criteria.addFilter(Shopware.Data.Criteria.multi('or', (this.product.downloads || this.parentProduct.downloads).map(item => Shopware.Data.Criteria.equals('mediaId', item.mediaId))))\r\n        criteria.addFilter(Shopware.Data.Criteria.equals('productId', this.product.id))\r\n        const promotions = await this.promotionProductRepository.search(criteria)\r\n\r\n        for (const download of (this.product.downloads || this.parentProduct.downloads)) {\r\n            let promotion: EntitySchema.Entity<'product_promotion'> = promotions.find(item => item.mediaId === download.mediaId)\r\n            if (!promotion) {\r\n                promotion = this.promotionProductRepository.create()\r\n                promotion.productId = this.product.id\r\n                promotion.mediaId = download.mediaId\r\n                promotion.media = download.media\r\n                promotion.promotion = this.promotionRepository.create()\r\n                promotion.promotionId = Shopware.Utils.createId()\r\n                promotion.promotion.id = promotion.promotionId\r\n                promotion.promotion.useCodes = true\r\n                promotion.promotion.useIndividualCodes = true\r\n                promotion.promotion.code = await this.promotionCodeApiService.generateCodeFixed()\r\n                promotion.promotion.active = true\r\n                promotion.promotion.maxRedemptionsPerCustomer = 1\r\n                const discount = this.repositoryFactory.create('promotion_discount').create()\r\n                discount.value = (this.product.price || Shopware.State.get('swProductDetail').parentProduct.price)[0].gross\r\n                discount.type = \"absolute\"\r\n                discount.scope = \"cart\"\r\n                discount.considerAdvancedRules = false\r\n                promotion.promotion.discounts.add(discount)\r\n                promotions.add(promotion)\r\n            }\r\n            promotion.promotion.name = `${this.product.name} Promotion`\r\n        }\r\n\r\n        await this.promotionRepository.saveAll(promotions.map(item => item.promotion))\r\n        await this.promotionProductRepository.saveAll(promotions)\r\n\r\n        const savedPromotions = await this.promotionProductRepository.search(criteria)\r\n        for (const promotion of savedPromotions) {\r\n            if (!Array.isArray(promotion.attributes)) promotion.attributes = []\r\n            await this.getFile(promotion)\r\n        }\r\n        this.downloads = savedPromotions\r\n    },\r\n    methods: {\r\n        async addAttribute(download: EntitySchema.Entity<'product_promotion'>) {\r\n            download.attributes.push({x: 'center', y: 100})\r\n            await this.updateAttributes(download)\r\n            this.$forceUpdate()\r\n        },\r\n        async updateAttributes(download: EntitySchema.Entity<'product_promotion'>) {\r\n            await this.promotionProductRepository.save(download)\r\n            await this.promotionRepository.save(download.promotion)\r\n            await this.getFile(download)\r\n            this.$refs[download.id].src = download.content\r\n        },\r\n        async getFile(promotion: EntitySchema.Entity<'product_promotion'>) {\r\n            const headers = {\r\n                Accept: this.contentType,\r\n                Authorization: `Bearer ${Shopware.Service('loginService').getToken()}`,\r\n                'Content-Type': 'application/json',\r\n            };\r\n            const blob = await (await fetch(`/api/promotionFile/${promotion.id}`, {\r\n                headers\r\n            })).blob()\r\n            promotion.content = URL.createObjectURL(blob);\r\n        }\r\n    }\r\n}\r\n","export default \"<div>\\r\\n    <div>Product Promotions</div>\\r\\n    <div v-for=\\\"download in downloads\\\">\\r\\n        <p>{{ download.promotion.name }}</p>\\r\\n        <div style=\\\"display:flex; justify-content: space-between\\\">\\r\\n            <div style=\\\"display: flex; flex-direction: column; width: 90%\\\">\\r\\n                <sw-promotion-v2-sales-channel-select\\r\\n                        :promotion=\\\"download.promotion\\\"\\r\\n                        @change=\\\"updateAttributes(download)\\\"\\r\\n                        :entity-collection=\\\"download.promotion.salesChannels\\\"></sw-promotion-v2-sales-channel-select>\\r\\n                <sw-field v-model=\\\"download.promotion.individualCodePattern\\\" label=\\\"Individual Code Pattern\\\"\\r\\n                          @change=\\\"updateAttributes(download)\\\"></sw-field>\\r\\n                <div v-for=\\\"(attribute, index) in download.attributes\\\"\\r\\n                     style=\\\"border-bottom: 1px solid; margin-bottom: 1rem\\\">\\r\\n                    <div>\\r\\n                        <div style=\\\"display:flex; justify-content: end;\\\"><span\\r\\n                                    @click=\\\"download.attributes.splice(index, 1)\\\">&times</span></div>\\r\\n                        <sw-select-field v-model=\\\"attribute.property\\\" label=\\\"Property\\\" :options=\\\"propertyOptions\\\"\\r\\n                                         @change=\\\"updateAttributes(download)\\\"></sw-select-field>\\r\\n                        <sw-field v-model=\\\"attribute.y\\\" label=\\\"Position Y (mm)\\\"\\r\\n                                  @change=\\\"updateAttributes(download)\\\"></sw-field>\\r\\n                        <sw-select-field v-model=\\\"attribute.x\\\" label=\\\"Position X\\\" :options=\\\"xOptions\\\"\\r\\n                                         @change=\\\"updateAttributes(download)\\\"></sw-select-field>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <sw-button @click=\\\"addAttribute(download)\\\">+</sw-button>\\r\\n        </div>\\r\\n        <div style=\\\"width: 100%\\\">\\r\\n            <iframe :src=\\\"download.content\\\" :ref=\\\"download.id\\\"\\r\\n                    style=\\\"height: calc(6rem + 297mm); width: 210mm; object-fit: contain\\\"></iframe>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\";"],"sourceRoot":""}